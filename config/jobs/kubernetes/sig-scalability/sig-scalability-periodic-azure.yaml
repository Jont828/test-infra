periodics:
- interval: 30m
  cluster: k8s-infra-prow-build
  name: ci-kubernetes-e2e-azure-scalability
  tags:
  - "perfDashPrefix: azure-100Nodes-master"
  - "perfDashJobType: performance"
  - "perfDashBuildsCount: 500"
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
    preset-e2e-scalability-common: "true"
    preset-e2e-scalability-periodics: "true"
    preset-e2e-scalability-periodics-master: "true"
  decorate: true
  decoration_config:
    timeout: 140m
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  - org: kubernetes
    repo: perf-tests
    base_ref: master
    path_alias: k8s.io/perf-tests
  - org: kubernetes-sigs
    repo: cluster-api-provider-azure
    base_ref: main
    path_alias: "sigs.k8s.io/cluster-api-provider-azure"
    workdir: true
  annotations:
    fork-per-release: "true"
    fork-per-release-cron: 0 */6 * * *, 0 0/12 * * *, 0 4-16/12 * * *, 0 8-20/12 * * *, 0 8-20/24 * * *
    fork-per-release-deletions: "preset-e2e-scalability-periodics-master"
    fork-per-release-replacements: "--extract=ci/fast/latest-fast -> --extract=ci/latest-{{.Version}}, gce-100Nodes-master -> gce-100Nodes-{{.Version}}"
    # TODO: azure or azure for the testgrid-dashboards?
    # TODO: create new dashboard
    testgrid-dashboards: sig-release-master-blocking, sig-scalability-azure
    testgrid-tab-name: azure-master-scalability-100
    testgrid-alert-email: kubernetes-provider-azure@googlegroups.com
    description: "Uses kubetest to run k8s.io/perf-tests/run-e2e.sh against a 100-node cluster created with cluster/kube-up.sh"
    testgrid-num-failures-to-alert: '2'
  spec:
    containers:
    - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20240611-597c402033-1.29
      command:
        - runner.sh
        - ./scripts/ci-entrypoint.sh
      args:
        - bash
        - -c
        - >-
          cd ${GOPATH}/src/k8s.io/perf-tests/ &&
          ./run-e2e.sh cluster-loader2
          --testconfig=testing/windows-tests/config.yaml
          --provider=aks
          --report-dir=${ARTIFACTS}
          --v=2
      env:
        # CAPZ config
        # - name: ADDITIONAL_ASO_CRDS
        #   value: authorization.azure.com/*;managedidentity.azure.com/* # needed for this CLUSTER_TEMPLATE
        - name: KUBERNETES_VERSION
          value: v1.29.4
        - name: CLUSTER_TEMPLATE
          value: "test/ci/cluster-template-prow-aks.yaml"
        - name: WORKER_MACHINE_COUNT
          value: "50" # TODO: there are two MachinePools in the template so really it's 100 total.
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
  # spec:
  #   containers:
  #   - image: gcr.io/k8s-staging-test-infra/kubekins-e2e:v20240611-597c402033-master
  #     command:
  #     - runner.sh
  #     - /workspace/scenarios/kubernetes_e2e.py
  #     args:
  #     - --check-leaked-resources
  #     - --cluster=e2e-big
  #     - --env=APISERVER_TEST_ARGS=--max-requests-inflight=80 --max-mutating-requests-inflight=0 --profiling --contention-profiling
  #     - --env=HEAPSTER_MACHINE_TYPE=e2-standard-8
  #     - --extract=ci/fast/latest-fast
  #     - --extract-ci-bucket=k8s-release-dev
  #     - --gcp-node-image=gci
  #     - --gcp-nodes=100
  #     - --gcp-project-type=scalability-project
  #     - --gcp-zone=us-east1-b
  #     - --provider=gce
  #     - --metadata-sources=cl2-metadata.json
  #     - --env=CL2_ENABLE_DNS_PROGRAMMING=true
  #     - --env=CL2_SCHEDULER_THROUGHPUT_THRESHOLD=0
  #     - --env=CL2_ENABLE_API_AVAILABILITY_MEASUREMENT=true
  #     - --env=CL2_API_AVAILABILITY_PERCENTAGE_THRESHOLD=99.5
  #     - --test=false
  #     - --test-cmd=$GOPATH/src/k8s.io/perf-tests/run-e2e.sh
  #     - --test-cmd-args=cluster-loader2
  #     - --test-cmd-args=--experimental-gcp-snapshot-prometheus-disk=true
  #     - --test-cmd-args=--experimental-prometheus-disk-snapshot-name=$(JOB_NAME)-$(BUILD_ID)
  #     - --test-cmd-args=--experimental-prometheus-snapshot-to-report-dir=true
  #     - --test-cmd-args=--nodes=100
  #     - --test-cmd-args=--prometheus-scrape-kubelets=true
  #     - --test-cmd-args=--prometheus-scrape-node-exporter
  #     - --test-cmd-args=--provider=gce
  #     - --test-cmd-args=--report-dir=$(ARTIFACTS)
  #     - --test-cmd-args=--testconfig=testing/load/config.yaml
  #     - --test-cmd-args=--testconfig=testing/huge-service/config.yaml
  #     - --test-cmd-args=--testconfig=testing/access-tokens/config.yaml
  #     # TODO(oxddr): re-enable this once we understand its impact on tests, https://github.com/kubernetes/kubernetes/issues/89051
  #     # - --test-cmd-args=--testoverrides=./testing/chaosmonkey/override.yaml
  #     # - --test-cmd-args=--testoverrides=./testing/chaosmonkey/ignore_node_killer_container_restarts_100.yaml
  #     - --test-cmd-args=--testoverrides=./testing/experiments/enable_restart_count_check.yaml
  #     - --test-cmd-args=--testoverrides=./testing/experiments/use_simple_latency_query.yaml
  #     - --test-cmd-args=--testoverrides=./testing/overrides/load_throughput.yaml
  #     - --test-cmd-name=ClusterLoaderV2
  #     - --timeout=120m
  #     - --use-logexporter
  #     - --logexporter-gcs-path=gs://sig-scalability-logs/$(JOB_NAME)/$(BUILD_ID)
  #     resources:
  #       requests:
  #         cpu: 2
  #         memory: 6Gi
  #       limits:
  #         cpu: 2
  #         memory: 6Gi
